version: '3.8'

services:
  # Frontend service
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:5000/api
      - REACT_APP_SOCKET_URL=http://localhost:5000
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - server

  # Backend service
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/blockchain_voting
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your_jwt_secret
      - CORS_ORIGIN=http://localhost:3000
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - mongodb
      - redis

  # MongoDB service
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password

  # Redis service
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # IPFS service
  ipfs:
    image: ipfs/kubo:latest
    ports:
      - "4001:4001"
      - "5001:5001"
      - "8080:8080"
    volumes:
      - ipfs_data:/data/ipfs

  # Ethereum node service (for development)
  ethereum:
    image: ethereum/client-go:latest
    ports:
      - "8545:8545"
      - "8546:8546"
    volumes:
      - ethereum_data:/root/.ethereum
    command: --dev --http --http.addr 0.0.0.0 --http.api eth,net,web3,personal,miner

volumes:
  mongodb_data:
  redis_data:
  ipfs_data:
  ethereum_data: 